class Bank_v1:
    bank_name='SBI'
    bank_ifsc='sbin00092'
    bank_roi=6
    bank_branch='hyderbad'
    def __init__(self,na,a,ac,cb):
        self.cname=na
        self.cage=a
        self.caccount=ac
        self.cbal=cb
    @staticmethod
    def get_int_value():
        integer=int(input('enter integer value:'))
        return integer
    
    @classmethod
    def modify_roi(cls):
        print(cls)
        newroi=cls.get_int_value()
        cls.bank_roi=newroi
        print('roi is changed')

    @classmethod
    def bank_details(cls):    
        print(f'name of bank: {cls.bank_name}')
        print(f'roi of bank: {cls.bank_roi}')
        print(f'ifsc of bank: {cls.bank_ifsc}')
        print(f'branch of bank: {cls.bank_branch}')
    def customer_details(self):
        print(f'customer name: {self.cname}')
        print(f'customer age: {self.cage}')
        print(f'customer account number: {self.caccount}')
        print(f'customer balance: {self.cbal}')

    def withdraw(self):
        amount = self.get_int_value()
        if self.cbal >= amount:
            self.cbal -= amount
            print(f'{self.cname}, your withdrawal of {amount} was successful.')
        else:
            print('Insufficient balance.')
        print(f'Available balance: {self.cbal}')
class Bank_v2(Bank_v1):
    bank_branch = 'Bangalore'
    bank_mobile=988874561

    def __init__(self,na,a,ac,cb,cp,cm):
        #super().__init__(na,a,ac,cb)
        Bank_v1.__init__(self,na,a,ac,cb)
        self.cpin=cp
        self.cmobile=cm

    def customer_details(self):
        super().customer_details()
        #Bank_v1.customer_details(self)
        print(f'cmobile of the customer is { self.cmobile}')

    def withdraw(self):
        pin=self.get_int_value()
        if pin==self.pin:
           super().withdraw()
           #Bank_v1.withdraw(self)
        else:
            print('invalid pin')

    def deposite(self):
        amount=self.get_int_value()
        self.cbal+=amount
        print('deposit is sucessfull')
ankit=Bank_v2('ankit',30,87774,20000,1234,987654)
#ankit.withdraw()
ankit.bank_details()
ankit.deposite()

     
