
####### hericchal inheritance #######



# Parent/base class
class Vehicle:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model

    def vehicle_info(self):
        print(f"Brand: {self.brand}")
        print(f"Model: {self.model}")

    def fuel_type(self):
        print("Generic fuel type")  # This will be overridden in child classes


# Child class 1 - Car inherits from Vehicle
class Car(Vehicle):  # Inheriting from Vehicle
    def __init__(self, brand, model, seats):
        super().__init__(brand, model)  # Call parent constructor
        self.seats = seats

    def vehicle_info(self):  # Overriding method
        super().vehicle_info()  # Call parent method
        print(f"Seats: {self.seats}")

    def fuel_type(self):  # Overriding method
        print("Car uses petrol or diesel")

# Child class 2 - Bike inherits from Vehicle
class Bike(Vehicle):  # Inheriting from Vehicle
    def __init__(self, brand, model, engine_cc):
        super().__init__(brand, model)
        self.engine_cc = engine_cc

    def vehicle_info(self):
        super().vehicle_info()
        print(f"Engine Capacity: {self.engine_cc}cc")

    def fuel_type(self):
        print("Bike uses petrol")



car1 = Car("Toyota", "Innova", 7)
bike1 = Bike("Yamaha", "R15", 155)

print("\n-- Car Info --")
car1.vehicle_info()
car1.fuel_type()


print("\n--Bike Info --")
bike1.vehicle_info()
bike1.fuel_type()
