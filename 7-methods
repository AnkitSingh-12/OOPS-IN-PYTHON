
## find the decoration using the fibanacci series 

def timeDecorator(arg):
   def inner():
        import time
        T1=time.time()
        arg()
        T2=time.time()
        print('Time taken for doing the task is',T2-T1)     
   return inner 
@timeDecorator#fibo=timeDecorator(fiboFaddress)#fibo=InnerFaddress
def fibo():
    a=int(input('enter first value'))#2
    b=int(input('enter second value'))#3
    n=int(input('enter HOW values u need'))#10
    if n==1:
        print(a)
    elif n==2:
        print(a,b)
    else:
        print(a,b)
        for i in range(n-2):
            c=a+b
            print(c)
            a,b=b,c
fibo()



#-----------------------------------------------------------------------------------#



####### find  the class  method and object method and static method 

class Bank():
    bank_name='SBI'
    bank_roi=5
    bank_branch='patna'
    def __init__(self,na,ac,cb):
        self.cname=na
        self.caccount=ac
        self.cbalnce=cb
    def customer_details(self):
        print(f'name of the customer is {self.cname}')
        print(f'name of the customer is {self.caccount}')
        print(f'name of the customer is {self.cbalnce}')
    def withdraw(self):
        amount=int(input('enter the amount'))
        if self.cbalnce>=amount:
            self.cbalnce-=amount
            print(f'{self.cname} ur money is withdrawn sucessfull')
        else:
            print('insufficient balance')
        print(f'available balnce is{self.cbalnce}')
    def deposit(self):
        amount=int(input('enter the amount'))
        self.cbalnce+=amount
        print('deposit is sucessfull')
    @staticmethod
    def get_int_value():
        integer=int(input())
        return integer
    @classmethod
    def modify_roi(cls):
        print(cls)
        newroi=cls.get_int_value()
        cls.bank_roi=newroi
        print('roi is changed')
    @classmethod
    def bank_details(cls):
        print(f'name of the bank is {cls.bank.name}')
        print(f'name of the bank is {cls.bank.roi}')
        print(f'name of the bank is {cls.bank.branch}')
ankit=Bank('ankit',98754,10000)
varsha=Bank('varsha',87777,20000)
#ankit.bank_details()
#varsha.bank_roi=4
Bank.modify_roi()
print(ankit.bank_roi)
print(varsha.bank_roi)
print(Bank.bank_roi)
ankit.withdraw()





