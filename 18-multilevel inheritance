#########  multilevel inheritance #########


#  Parent/Base Class
class User:
    def __init__(self, name):
        self.name = name  # Storing user's name

    def get_details(self):
        print(f"User Name: {self.name}")  # Display user name

    def access(self):
        print("User can browse food items.")  # Basic access rights

#  Child Class (1st level) inherits from User
class Order(User):
    def __init__(self, name, items):
        super().__init__(name)  # Chaining to parent (User)
        self.items = items  # Storing list of items ordered

    def get_details(self):
        super().get_details()  # Calling parent's method
        print(f"Ordered Items: {', '.join(self.items)}")  # Display ordered items

    def access(self):  # Overriding parent's access method
        print("User can place an order.")  # More access added

# Child Class (2nd level) inherits from Order
class OnlineOrder(Order):
    def __init__(self, name, items, payment_method):
        super().__init__(name, items)  # Chaining to Order class
        self.payment_method = payment_method  # Storing payment method

    def get_details(self):
        super().get_details()  # Call parent method to reuse existing info
        print(f"Payment Method: {self.payment_method}")  # Display payment method

    def access(self):  # Overriding again
        super().access()  # Call previous access method
        print("User can track the order online.")  # Additional feature


order1 = OnlineOrder("Ankit", ["Pizza", "Coke"], "UPI")
print("\n--- Order Details ---")
order1.get_details()

print("\n--- Access Info ---")
order1.access()
